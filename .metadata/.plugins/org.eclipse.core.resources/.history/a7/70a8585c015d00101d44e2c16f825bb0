package co.edu.unicauca.sgph.periodoacademico.infrastructure.input.mapper;

import co.edu.unicauca.sgph.periodoacademico.domain.model.PeriodoAcademico;
import co.edu.unicauca.sgph.periodoacademico.infrastructure.input.DTORequest.PeriodoAcademicoInDTO;
import co.edu.unicauca.sgph.periodoacademico.infrastructure.input.DTOResponse.PeriodoAcademicoOutDTO;
import java.util.ArrayList;
import java.util.List;
import javax.annotation.processing.Generated;
import org.springframework.stereotype.Component;

@Generated(
    value = "org.mapstruct.ap.MappingProcessor",
    date = "2025-07-09T11:00:32-0500",
    comments = "version: 1.5.5.Final, compiler: javac, environment: Java 17.0.7 (Eclipse Adoptium)"
)
@Component
public class PeriodoAcademicoRestMapperImpl implements PeriodoAcademicoRestMapper {

    @Override
    public PeriodoAcademicoOutDTO toPeriodoAcademicoOutDTO(PeriodoAcademico periodoAcademico) {
        if ( periodoAcademico == null ) {
            return null;
        }

        PeriodoAcademicoOutDTO periodoAcademicoOutDTO = new PeriodoAcademicoOutDTO();

        periodoAcademicoOutDTO.setIdPeriodoAcademico( periodoAcademico.getIdPeriodoAcademico() );
        periodoAcademicoOutDTO.setAnio( periodoAcademico.getAnio() );
        periodoAcademicoOutDTO.setPeriodo( periodoAcademico.getPeriodo() );
        periodoAcademicoOutDTO.setFechaInicioPeriodo( periodoAcademico.getFechaInicioPeriodo() );
        periodoAcademicoOutDTO.setFechaFinPeriodo( periodoAcademico.getFechaFinPeriodo() );
        periodoAcademicoOutDTO.setEstado( periodoAcademico.getEstado() );

        return periodoAcademicoOutDTO;
    }

    @Override
    public PeriodoAcademico toPeriodoAcademico(PeriodoAcademicoInDTO periodoAcademicoInDTO) {
        if ( periodoAcademicoInDTO == null ) {
            return null;
        }

        PeriodoAcademico periodoAcademico = new PeriodoAcademico();

        periodoAcademico.setIdPeriodoAcademico( periodoAcademicoInDTO.getIdPeriodoAcademico() );
        periodoAcademico.setAnio( periodoAcademicoInDTO.getAnio() );
        periodoAcademico.setPeriodo( periodoAcademicoInDTO.getPeriodo() );
        periodoAcademico.setFechaInicioPeriodo( periodoAcademicoInDTO.getFechaInicioPeriodo() );
        periodoAcademico.setFechaFinPeriodo( periodoAcademicoInDTO.getFechaFinPeriodo() );
        periodoAcademico.setEstado( periodoAcademicoInDTO.getEstado() );

        return periodoAcademico;
    }

    @Override
    public List<PeriodoAcademicoOutDTO> toLstPeriodoAcademicoOutDTO(List<PeriodoAcademico> lstPeriodoAcademico) {
        if ( lstPeriodoAcademico == null ) {
            return null;
        }

        List<PeriodoAcademicoOutDTO> list = new ArrayList<PeriodoAcademicoOutDTO>( lstPeriodoAcademico.size() );
        for ( PeriodoAcademico periodoAcademico : lstPeriodoAcademico ) {
            list.add( toPeriodoAcademicoOutDTO( periodoAcademico ) );
        }

        return list;
    }
}
