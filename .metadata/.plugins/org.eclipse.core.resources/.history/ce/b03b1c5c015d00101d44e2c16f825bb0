package co.edu.unicauca.sgph.espaciofisico.infrastructure.input.mapper;

import co.edu.unicauca.sgph.espaciofisico.domain.model.TipoEspacioFisico;
import co.edu.unicauca.sgph.espaciofisico.infrastructure.input.DTORequest.TipoEspacioFisicoInDTO;
import co.edu.unicauca.sgph.espaciofisico.infrastructure.input.DTOResponse.TipoEspacioFisicoOutDTO;
import java.util.ArrayList;
import java.util.List;
import javax.annotation.processing.Generated;
import org.springframework.stereotype.Component;

@Generated(
    value = "org.mapstruct.ap.MappingProcessor",
    date = "2025-07-09T11:00:33-0500",
    comments = "version: 1.5.5.Final, compiler: javac, environment: Java 17.0.7 (Eclipse Adoptium)"
)
@Component
public class TipoEspacioFisicoRestMapperImpl implements TipoEspacioFisicoRestMapper {

    @Override
    public TipoEspacioFisicoOutDTO toTipoEspacioFisicoOutDTO(TipoEspacioFisico tipoEspacioFisico) {
        if ( tipoEspacioFisico == null ) {
            return null;
        }

        TipoEspacioFisicoOutDTO tipoEspacioFisicoOutDTO = new TipoEspacioFisicoOutDTO();

        tipoEspacioFisicoOutDTO.setIdTipoEspacioFisico( tipoEspacioFisico.getIdTipoEspacioFisico() );
        tipoEspacioFisicoOutDTO.setTipo( tipoEspacioFisico.getTipo() );
        tipoEspacioFisicoOutDTO.setObservacion( tipoEspacioFisico.getObservacion() );

        return tipoEspacioFisicoOutDTO;
    }

    @Override
    public TipoEspacioFisico toTipoEspacioFisico(TipoEspacioFisicoInDTO tipoEspacioFisicoInDTO) {
        if ( tipoEspacioFisicoInDTO == null ) {
            return null;
        }

        TipoEspacioFisico tipoEspacioFisico = new TipoEspacioFisico();

        tipoEspacioFisico.setIdTipoEspacioFisico( tipoEspacioFisicoInDTO.getIdTipoEspacioFisico() );
        tipoEspacioFisico.setTipo( tipoEspacioFisicoInDTO.getTipo() );
        tipoEspacioFisico.setObservacion( tipoEspacioFisicoInDTO.getObservacion() );

        return tipoEspacioFisico;
    }

    @Override
    public List<TipoEspacioFisicoOutDTO> toLstTipoEspacioFisicoOutDTO(List<TipoEspacioFisico> lstTipoEspacioFisico) {
        if ( lstTipoEspacioFisico == null ) {
            return null;
        }

        List<TipoEspacioFisicoOutDTO> list = new ArrayList<TipoEspacioFisicoOutDTO>( lstTipoEspacioFisico.size() );
        for ( TipoEspacioFisico tipoEspacioFisico : lstTipoEspacioFisico ) {
            list.add( toTipoEspacioFisicoOutDTO( tipoEspacioFisico ) );
        }

        return list;
    }
}
