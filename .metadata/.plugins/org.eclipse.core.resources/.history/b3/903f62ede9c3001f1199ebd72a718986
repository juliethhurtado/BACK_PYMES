package co.edu.unicauca.sgph.reservatemporal.infrastructure.mapper;

import co.edu.unicauca.sgph.reservatemporal.domain.model.ReservaTemporal;
import co.edu.unicauca.sgph.reservatemporal.infrastructure.input.DTORequest.ReservaTemporalInDTO;
import co.edu.unicauca.sgph.reservatemporal.infrastructure.input.DTOResponse.ReservaTemporalOutDTO;
import java.util.ArrayList;
import java.util.List;
import javax.annotation.processing.Generated;
import org.springframework.stereotype.Component;

@Generated(
    value = "org.mapstruct.ap.MappingProcessor",
    date = "2024-12-26T16:49:02-0500",
    comments = "version: 1.5.5.Final, compiler: javac, environment: Java 17.0.7 (Eclipse Adoptium)"
)
@Component
public class ReservaTemporalRestMapperImpl implements ReservaTemporalRestMapper {

    @Override
    public ReservaTemporalOutDTO toReservaTemporalOutDTO(ReservaTemporal reservaTemporal) {
        if ( reservaTemporal == null ) {
            return null;
        }

        ReservaTemporalOutDTO reservaTemporalOutDTO = new ReservaTemporalOutDTO();

        reservaTemporalOutDTO.setIdReserva( reservaTemporal.getIdReserva() );
        reservaTemporalOutDTO.setIdEspacioFisico( reservaTemporal.getIdEspacioFisico() );
        reservaTemporalOutDTO.setIdUsuario( reservaTemporal.getIdUsuario() );
        reservaTemporalOutDTO.setFechaReserva( reservaTemporal.getFechaReserva() );
        reservaTemporalOutDTO.setEstado( reservaTemporal.getEstado() );
        reservaTemporalOutDTO.setObservaciones( reservaTemporal.getObservaciones() );

        return reservaTemporalOutDTO;
    }

    @Override
    public ReservaTemporal toReservaTemporal(ReservaTemporalInDTO inDTO) {
        if ( inDTO == null ) {
            return null;
        }

        ReservaTemporal reservaTemporal = new ReservaTemporal();

        reservaTemporal.setIdEspacioFisico( inDTO.getIdEspacioFisico() );
        reservaTemporal.setFechaReserva( inDTO.getFechaReserva() );
        reservaTemporal.setEstado( inDTO.getEstado() );
        reservaTemporal.setObservaciones( inDTO.getObservaciones() );

        return reservaTemporal;
    }

    @Override
    public List<ReservaTemporalOutDTO> toLstReservaTemporalOutDTO(List<ReservaTemporal> lstReservaTemporal) {
        if ( lstReservaTemporal == null ) {
            return null;
        }

        List<ReservaTemporalOutDTO> list = new ArrayList<ReservaTemporalOutDTO>( lstReservaTemporal.size() );
        for ( ReservaTemporal reservaTemporal : lstReservaTemporal ) {
            list.add( toReservaTemporalOutDTO( reservaTemporal ) );
        }

        return list;
    }
}
