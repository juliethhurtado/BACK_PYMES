package co.edu.unicauca.sgph.espaciofisico.infrastructure.input.mapper;

import co.edu.unicauca.sgph.agrupador.domain.model.AgrupadorEspacioFisico;
import co.edu.unicauca.sgph.agrupador.infrastructure.input.mapper.AgrupadorEspacioFisicoRestMapper;
import co.edu.unicauca.sgph.asignatura.infrastructure.input.DTOResponse.AgrupadorEspacioFisicoDTO;
import co.edu.unicauca.sgph.espaciofisico.domain.model.EspacioFisico;
import co.edu.unicauca.sgph.espaciofisico.domain.model.TipoEspacioFisico;
import co.edu.unicauca.sgph.espaciofisico.infrastructure.input.DTORequest.EspacioFisicoInDTO;
import co.edu.unicauca.sgph.espaciofisico.infrastructure.input.DTOResponse.EspacioFisicoOutDTO;
import co.edu.unicauca.sgph.espaciofisico.infrastructure.input.DTOResponse.TipoEspacioFisicoOutDTO;
import java.util.ArrayList;
import java.util.List;
import javax.annotation.processing.Generated;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

@Generated(
    value = "org.mapstruct.ap.MappingProcessor",
    date = "2025-07-08T12:25:07-0500",
    comments = "version: 1.5.5.Final, compiler: javac, environment: Java 17.0.7 (Eclipse Adoptium)"
)
@Component
public class EspacioFisicoRestMapperImpl implements EspacioFisicoRestMapper {

    @Autowired
    private AgrupadorEspacioFisicoRestMapper agrupadorEspacioFisicoRestMapper;

    @Override
    public EspacioFisicoOutDTO toEspacioFisicoOutDTO(EspacioFisico espacioFisico) {
        if ( espacioFisico == null ) {
            return null;
        }

        EspacioFisicoOutDTO espacioFisicoOutDTO = new EspacioFisicoOutDTO();

        espacioFisicoOutDTO.setLstIdAgrupadorEspacioFisico( agrupadorEspacioFisicoListToAgrupadorEspacioFisicoDTOList( espacioFisico.getAgrupadores() ) );
        espacioFisicoOutDTO.setOID( espacioFisico.getOID() );
        espacioFisicoOutDTO.setIdEspacioFisico( espacioFisico.getIdEspacioFisico() );
        espacioFisicoOutDTO.setSalon( espacioFisico.getSalon() );
        espacioFisicoOutDTO.setCapacidad( espacioFisico.getCapacidad() );
        espacioFisicoOutDTO.setEstado( espacioFisico.getEstado() );

        espacioFisicoOutDTO.setIdTipoEspacioFisico( espacioFisico.getTipoEspacioFisico() != null ?  espacioFisico.getTipoEspacioFisico().getIdTipoEspacioFisico(): null );
        espacioFisicoOutDTO.setNombreTipoEspacioFisico( espacioFisico.getTipoEspacioFisico() != null ?  espacioFisico.getTipoEspacioFisico().getTipo(): null );
        espacioFisicoOutDTO.setIdEdificio( espacioFisico.getEdificio() != null ? espacioFisico.getEdificio().getIdEdificio() : null );
        espacioFisicoOutDTO.setNombreEdificio( espacioFisico.getEdificio() != null ? espacioFisico.getEdificio().getNombre() : null );
        espacioFisicoOutDTO.setIdUbicacion( espacioFisico.getUbicacion() != null ? espacioFisico.getUbicacion().getIdUbicacion() : null );
        espacioFisicoOutDTO.setNombreUbicacion( espacioFisico.getUbicacion() != null ? espacioFisico.getUbicacion().getNombre() : null );
        espacioFisicoOutDTO.setRecursos( mapEntidadToOutDto(espacioFisico.getRecursosEspacioFisico()) );

        return espacioFisicoOutDTO;
    }

    @Override
    public EspacioFisico toEspacioFisico(EspacioFisicoInDTO espacioFisicoInDTO) {
        if ( espacioFisicoInDTO == null ) {
            return null;
        }

        EspacioFisico espacioFisico = new EspacioFisico();

        espacioFisico.setAgrupadores( toAgrupadorEspacioFisico( espacioFisicoInDTO.getLstIdAgrupadorEspacioFisico() ) );
        espacioFisico.setIdEspacioFisico( espacioFisicoInDTO.getIdEspacioFisico() );
        espacioFisico.setSalon( espacioFisicoInDTO.getSalon() );
        espacioFisico.setCapacidad( espacioFisicoInDTO.getCapacidad() );
        espacioFisico.setEstado( espacioFisicoInDTO.getEstado() );
        espacioFisico.setOID( espacioFisicoInDTO.getOID() );

        espacioFisico.setRecursosEspacioFisico( mapDtoToEntidad(espacioFisicoInDTO.getRecursos()) );
        espacioFisico.setTipoEspacioFisico( new TipoEspacioFisico(espacioFisicoInDTO.getIdTipoEspacioFisico()) );
        espacioFisico.setUbicacion( mapUbicacion(espacioFisicoInDTO.getIdUbicacion()) );

        return espacioFisico;
    }

    @Override
    public List<EspacioFisicoOutDTO> toLstEspacioFisicoOutDTO(List<EspacioFisico> lstEspacioFisico) {
        if ( lstEspacioFisico == null ) {
            return null;
        }

        List<EspacioFisicoOutDTO> list = new ArrayList<EspacioFisicoOutDTO>( lstEspacioFisico.size() );
        for ( EspacioFisico espacioFisico : lstEspacioFisico ) {
            list.add( toEspacioFisicoOutDTO( espacioFisico ) );
        }

        return list;
    }

    @Override
    public List<TipoEspacioFisicoOutDTO> toLstTipoEspacioFisicoOutDTO(List<TipoEspacioFisico> lstTipoEspacioFisico) {
        if ( lstTipoEspacioFisico == null ) {
            return null;
        }

        List<TipoEspacioFisicoOutDTO> list = new ArrayList<TipoEspacioFisicoOutDTO>( lstTipoEspacioFisico.size() );
        for ( TipoEspacioFisico tipoEspacioFisico : lstTipoEspacioFisico ) {
            list.add( tipoEspacioFisicoToTipoEspacioFisicoOutDTO( tipoEspacioFisico ) );
        }

        return list;
    }

    protected List<AgrupadorEspacioFisicoDTO> agrupadorEspacioFisicoListToAgrupadorEspacioFisicoDTOList(List<AgrupadorEspacioFisico> list) {
        if ( list == null ) {
            return null;
        }

        List<AgrupadorEspacioFisicoDTO> list1 = new ArrayList<AgrupadorEspacioFisicoDTO>( list.size() );
        for ( AgrupadorEspacioFisico agrupadorEspacioFisico : list ) {
            list1.add( agrupadorEspacioFisicoRestMapper.toAgrupadorEspacioFisicoDTO( agrupadorEspacioFisico ) );
        }

        return list1;
    }

    protected TipoEspacioFisicoOutDTO tipoEspacioFisicoToTipoEspacioFisicoOutDTO(TipoEspacioFisico tipoEspacioFisico) {
        if ( tipoEspacioFisico == null ) {
            return null;
        }

        TipoEspacioFisicoOutDTO tipoEspacioFisicoOutDTO = new TipoEspacioFisicoOutDTO();

        tipoEspacioFisicoOutDTO.setIdTipoEspacioFisico( tipoEspacioFisico.getIdTipoEspacioFisico() );
        tipoEspacioFisicoOutDTO.setTipo( tipoEspacioFisico.getTipo() );
        tipoEspacioFisicoOutDTO.setObservacion( tipoEspacioFisico.getObservacion() );

        return tipoEspacioFisicoOutDTO;
    }
}
